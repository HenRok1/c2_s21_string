#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "s21_string.h"

// strcat

#test strcat_1
char   src[50] = "Hello world";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_2
char   src[50] = " \n\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_3
char   src[50] = "\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_4
char   src[50] = "\n\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_5
char   src[50] = "a\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_6
char   src[50] = "NULL\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_7
char   src[50] = "Hello Hello Hello Hello\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_8
char   src[50] = "Hello world";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_9
char   src[50] = " \n\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_10
char   src[50] = "\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_11
char   src[50] = "\n\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_12
char   src[50] = "a\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_13
char   src[50] = "NULL\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

#test strcat_14
char   src[50] = "Hello Hello Hello Hello\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strcat(dest1, src), strcat(dest2, src));

// strncat

#test strncat_1
char   src[50] = "Hello world";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_2
char   src[50] = " \n\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_3
char   src[50] = "\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_4
char   src[50] = "\n\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_5
char   src[50] = "a\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_6
char   src[50] = "NULL\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_7
char   src[50] = "Hello Hello Hello Hello\0";
char dest1[50] = "";
char dest2[50] = "";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_8
char   src[50] = "Hello world";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_9
char   src[50] = " \n\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_10
char   src[50] = "\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_11
char   src[50] = "\n\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_12
char   src[50] = "a\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_13
char   src[50] = "NULL\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_14
char   src[50] = "Hello Hello Hello Hello\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 7));

#test strncat_15
char   src[50] = "Hello world";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

#test strncat_16
char   src[50] = " \n\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

#test strncat_17
char   src[50] = "\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

#test strncat_18
char   src[50] = "\n\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

#test strncat_19
char   src[50] = "a\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

#test strncat_20
char   src[50] = "NULL\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

#test strncat_21
char   src[50] = "Hello Hello Hello Hello\0";
char dest1[50] = "sdkfjhge ri3hc8 ";
char dest2[50] = "sdkfjhge ri3hc8 ";
ck_assert_str_eq(s21_strncat(dest1, src, 7), strncat(dest2, src, 15));

// strtok

#test strtok_1
char   src[50] = "Hello world";
char delim[50] = " ";
char *dest1;
dest1 = strcpy(dest1, src);
char *dest2;
dest2 = strcpy(dest2, src);
ck_assert_str_eq(s21_strtok(dest1, delim), strtok(dest2, delim));